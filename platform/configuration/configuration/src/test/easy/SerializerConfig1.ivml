project SerializerConfig1 {

    import IIPEcosphere;
    import DataTypes;

    annotate BindingTime bindingTime = BindingTime::compile to .;

    serializer = Serializer::Json;
    // serviceManager, containerManager are already defined    
    
    RecordType rec1 = {
        name = "Rec1",
        fields = {
            Field {
                name = "intField",
                type = refBy(IntegerType)
            }, Field {
                name = "stringField",
                type = refBy(StringType)
            }
        }
    };
    
    aasServer = {
        schema = AasSchema::HTTP,
        port = 8080,
        host = "127.0.0.1"
    };
    aasRegistryServer = {
        schema = AasSchema::HTTP,
        port = 8081,
        host = "127.0.0.1"
    };
    aasImplServer = {
        port = 8082,
        host = "127.0.0.1"
    };
    aasProtocol = AasProtocolVabTcp{};
    
    // TODO freezing is not recursive
    // unconditional free for testing
    freeze {
        aas;
        aasServer;
        aasRegistryServer;
        aasImplServer;
        aasPersistency;
        aasProtocol;
        serializer;
        transportProtocol;
        serviceManager;
        serviceProtocol;
        containerManager;
        .;
    } but (f|f.bindingTime >= BindingTime.runtimeMon);

}