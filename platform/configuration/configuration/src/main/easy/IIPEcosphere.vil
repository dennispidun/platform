import JavaBasics;

@advice(IIPEcosphere)
vilScript IIPEcosphere (Project source, Configuration config, Project target) {

    // preliminary!!! make it language-generic

    Path appRoot = "${target}/app";
    Path javaSrc = "${appRoot}/src/main/java";
    Path pySrc = "${appRoot}/src/main/python";
    String javaDatatypesPackage = "iip.datatypes"; // link to javaDatatypesSrc
    Path javaDatatypesSrc = "${javaSrc}/iip/datatypes";
    String javaSerializersPackage = "iip.serializers"; // link to javaSerializersSrc
    Path javaSerializersSrc = "${javaSrc}/iip/serializers";
    Path ecsRuntimeRoot = "${target}/ecsRuntime";
    Path serviceMgrRoot = "${target}/serviceMgr";
    Path platformRoot = "${target}/platform";
    
    main(Project source, Configuration config, Project target) = {
        javaDatatypesSrc.mkdir();
        javaSerializersSrc.mkdir();
        ecsRuntimeRoot.mkdir();
        serviceMgrRoot.mkdir();
        platformRoot.mkdir();
        
        for (RecordType r : RecordType.allInstances()) {
            // generate for all languages and according to serializer settings
            String clsName = asTypeName(r.name);
            vilTemplateProcessor("JavaType", config, "${javaDatatypesSrc}/${clsName}.java", type=r, pkg=javaDatatypesPackage);
            vilTemplateProcessor("JavaJsonSerializer", config, "${javaSerializersSrc}/${clsName}Serializer.java", type=r, pkg=javaSerializersPackage, typePkg=javaDatatypesPackage);
            vilTemplateProcessor("PythonType", config, "${pySrc}/${clsName}.py", type=r);
            vilTemplateProcessor("PythonJsonSerializer", config, "${pySrc}/${clsName}Serializer.py", type=r);
        };
        
        vilTemplateProcessor("AppMvn", config, "${appRoot}/pom.xml");
        maven("${appRoot}");
        
        Path p = "${ecsRuntimeRoot}/src/main/resources";
        p.mkdir();
        vilTemplateProcessor("EcsRuntimeDockerContainerManagerYaml", config, "${p}/iipecosphere.yml");
        vilTemplateProcessor("EcsRuntimeMvn", config, "${ecsRuntimeRoot}/pom.xml");
        maven("${ecsRuntimeRoot}");
        
        p = "${serviceMgrRoot}/src/main/resources";
        p.mkdir();
        vilTemplateProcessor("ServiceControlSpringCloudStreamYaml", config, "${p}/iipecosphere.yml");
        vilTemplateProcessor("ServiceControlMvn", config, "${serviceMgrRoot}/pom.xml");
        maven("${serviceMgrRoot}");
        
        p = "${platformRoot}/src/main/resources";
        p.mkdir();
        vilTemplateProcessor("PlatformYaml", config, "${p}/iipecosphere.yml");
        vilTemplateProcessor("PlatformMvn", config, "${platformRoot}/pom.xml");
        maven("${platformRoot}");
    }

}