import JavaBasics;
import SpringCloudStreamBasics;

@advice(IIPEcosphere)
@indent(indentation = 4, additional = 0)
template JavaSpringCloudStreamYaml(Configuration config, FileArtifact target, mapOf(NetElement, setOf(NetConnector)) mappedNet) {

    // TODO do we need a sequence here?
    def function(mapOf(NetElement, setOf(NetConnector)) mappedNet) {
        String result = "";
        for (NetElement elt: mappedNet.keys()) {
            if (result.length() > 0) {
                result = result + ";";
            }
            result = result + functionName(elt);
        }        
        result;
    }
    
    def bindings(mapOf(NetElement, setOf(NetConnector)) mappedNet) {
        for (NetElement elt: mappedNet.keys()) {
            '${elt.name}:
                destination: xxx'
        }
    }

    def main(Configuration config, FileArtifact target, mapOf(NetElement, setOf(NetConnector)) mappedNet) {
        'spring:
            cloud:
                function:
                    definition: ${function(mappedNet)}
                stream:
                    bindings:
                        ${bindings(mappedNet)}'
    }

}