import JavaBasics;

@advice(IIPEcosphere)
@indent(indentation = 4, additional = 0)
template JavaSpringCloudStreamNetElement(Configuration config, FileArtifact target, NetElement elt, String pkg) {

    def generateSpringMethod(NetElement elt) {
    }

    def generateSpringMethod(NetSource elt) {
        '@Bean
        public Supplier<String> create() {
            return () -> ""; // input/output types required
        }'
    }

    def generateSpringMethod(NetProcessor elt) {
        '@Bean
        public Function<String, String> process() {
            return data -> ""; // input/output types required
        }'
    }

    def generateSpringMethod(NetSink elt) {
        '@Bean
        public Consumer<String> receive() {
            return data -> {}; // input/output types required
        }'
    }

    def main(Configuration config, FileArtifact target, NetElement elt, String pkg) {
        String clsName = asTypeName(elt.name);
        'package ${pkg};
        
        import java.util.function.*;
        import org.springframework.context.annotation.Bean;
        import org.springframework.stereotype.Component;

        /**
         * Spring Cloud Stream service frame for net node \'${elt.name}\'.
         * Generated by: EASy-Producer.
         */
        @Component
        public class ${clsName} {
        
            ${generateSpringMethod(elt)}
        
        }'
    }
    
}
