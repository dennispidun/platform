import JavaBasics;
import SpringCloudStreamBasics;

@advice(IIPEcosphere)
@indent(indentation = 4, additional = 0)
template JavaSpringCloudStreamNetElement(Configuration config, FileArtifact target, NetElement elt, String pkg) {

    def generateSpringMethods(NetElement elt) {
    }

    def generateSpringMethods(NetSource elt) {
        for (IOType out : elt.output) {
            String type = toTypeName(out.type);
            '@Bean
            public Supplier<${type}> create() {
                return () -> null; // link to service
            }'
        }
    }

    def generateSpringMethods(NetProcessor elt) {
        if (elt.impl.asynchronous) {
            for (IOType in : elt.input) {
                String type = toTypeName(in.type);
                '@Bean
                public Consumer<${type}> process() {
                    return data -> {}; // link to service
                }'
            }
        } else {
            Integer p = 0;
            while (p < elt.input.size()) {
                IOType in = elt.input[p];
                IOType out = elt.output[p];
                p = p + 1;
                String inType = toTypeName(in.type);
                String outType = toTypeName(out.type);
                '@Bean
                public Function<${inType}, ${outType}> process() {
                    return data -> null; // link to service
                }'
            }
        }
    }

    def generateSpringMethods(NetSink elt) {
        for (IOType in : elt.input) {
            String type = toTypeName(in.type);
            '@Bean
            public Consumer<${type}> receive() {
                return data -> {}; // link to service
            }'
        }
    }

    def main(Configuration config, FileArtifact target, NetElement elt, String pkg) {
        String clsName = asTypeName(elt.name);
        'package ${pkg};
        
        import java.util.function.*;
        import org.springframework.context.annotation.Bean;
        import org.springframework.stereotype.Component;
        import iip.datatypes.*;
        import iip.interfaces.*;
        import iip.stubs.*;

        /**
         * Spring Cloud Stream service frame for net node \'${elt.name}\'.
         * Generated by: EASy-Producer.
         */
        @Component
        public class ${clsName} {
        
            private ${clsName}Service service;
        
            ${generateSpringMethods(elt)}
        
        }'
    }
    
}
