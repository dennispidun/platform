import MavenBasics;
import JavaMapping;

@advice(IIPEcosphere)
template AppMvn(IIPEcosphere config, XmlFileArtifact target, setOf(String) artifacts, String starterCls, Application app, String appName) {

    def XmlElement appendSpringBootPlugin(XmlElement plugins, String version="2.4.2", String mainClass="") {
        XmlElement plugin = appendPlugin(plugins, "org.springframework.boot", "spring-boot-maven-plugin", version, false);
        XmlElement config = appendConfiguration(plugin);
        new XmlElement(config, "addResources", "false");
        XmlElement exec = appendExecutions(plugin);
        appendGoal(exec, "repackage");

        if (mainClass.length() > 0) {
            XmlElement cfg = appendConfiguration(exec);
            new XmlElement(cfg, "mainClass", mainClass);
        }
    }

    def main(IIPEcosphere config, XmlFileArtifact target, setOf(String) artifacts, String starterCls, Application app, String appName) {
        String iipGroup = "de.iip-ecosphere.platform";
        String projectVersion = config.iipVer;
        
        XmlElement project = createMavenRoot(target);
        createMavenProjectAttributes(project, "${appName}", "ConfiguredApp", "Configured Application");
        new XmlElement(project, "groupId", "${iipGroup}.apps");
        new XmlElement(project, "version", "${app.ver}");        
        // app version cannot be used with maven parent, use import??
        createMavenParent(project, iipGroup, "platformDependencies", "${config.iipVer}");
        
        XmlElement dep = new XmlElement(project, "dependencies");
        appendDependency(dep, iipGroup, "transport", projectVersion);
        appendDependency(dep, iipGroup, "services.environment", projectVersion);
        appendDependency(dep, iipGroup, serviceEnvironmentModule(config), projectVersion);
        appendDependency(dep, iipGroup, transportProtocolModule(config), projectVersion);
        appendDependency(dep, iipGroup, serviceProtocolModule(config), projectVersion);
        for (String art : artifacts) {
            appendArtifact(dep, art, projectVersion);
        }
        
        XmlElement plugins = createMavenBuildElement(project, "", true);
        XmlElement assemblyPlugin = appendAssemblyPlugin(plugins);
        appendAssemblyDescriptor(assemblyPlugin, "appPython", "src/main/assembly/python.xml");
        appendAssemblyDescriptor(assemblyPlugin, "interfaces", "src/main/assembly/javaInterfaces.xml", attach=true);
        appendSpringBootPlugin(plugins, "2.4.2", "${starterCls}");
    }

}
