project Transport {

    import Aas;
    
    annotate BindingTime bindingTime = BindingTime::compile to .;
    
    // enum for now
    enum Serializer { Json, ProtoBuf };
    Serializer serializer = Serializer::Json;
    Constraint serializerDefined = isDefined(serializer) and serializer <> null;

    // ----------------------------------------------
    
    enum ProtocolType { Mqttv3, Mqttv5, Amqp };
    
    abstract compound TransportProtocol {
    	ProtocolType type;
    };
    
    compound TransportProtocolAMQP refines TransportProtocol {
    	ProtocolType type = ProtocolType::Amqp;
    };
    
    compound TransportProtocolMQTTv3 refines TransportProtocol {
    	ProtocolType type = ProtocolType::Mqttv3;
    };
    
    compound TransportProtocolMQTTv5 refines TransportProtocol {
    	ProtocolType type = ProtocolType::Mqttv5;
    };    
    
    TransportProtocol transportProtocol = TransportProtocolAMQP {
    };
    
    Constraint transportProtocolDefined = isDefined(transportProtocol) and transportProtocol<> null;
    
    // TODO 
    // - transport protocol playload limitation
    
    freeze {
        // prevent later changes of constraint but make it referencable to .text
        serializerDefined;
        transportProtocolDefined;
    };
    
}